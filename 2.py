# Ограничение времени	2 секунды
# Ограничение памяти	256Mb


# Во время торнадо в Костромской области было повалено большое количество деревьев. 
# Однажды утром, спустя пару дней после торнадо, мальчик Илья вышел прогуляться и увидел, 
# что поваленные деревья образовали настоящий лабиринт. Вася очень обрадовался, стал 
# гулять и играть в лабиринте. Внезапно ему позвонил преподаватель и поинтересовался, 
# почему он давно не видел Илью. Чтобы не получить дырку в бэйджик за самовольный выход 
# за территорию лагеря, Илья, конечно же, хотел попасть в домик как можно скорее, но и побродить 
# по лабиринту ему тоже очень хотелось. Помогите ему узнать, как быстро он сможет добраться до домика.


# Формат ввода
# В первой строке входного файла заданы целые положительные числа N и M (). В следующих 
# N строках заданы по M символов, описывающих лабиринт. На позициях, по которым Илья может 
# перемещаться, записан символ «0», а на позициях, которые перегорожены деревьями, записан 
# символ «1». После описания лабиринта следуют целые числа x1, y1, x2, y2 — координаты (то 
# есть соответствующие номера столбцов и строк) Ильи и его домика соответственно (, ).


# Формат вывода
# В выходной файл выведите единственное число — длину кратчайшего пути от точки (x1, y1) 
# до точки (x2, y2), если Илья может добраться до дому по лабиринту, и «-1» в противном случае.

n, m = map(int, input().split())
matrix = [list(map(int, input().split())) for _ in range(n)]
x1, y1 = map(int, input().split())
x2, y2 = map(int, input().split())

queue = [(x1-1, y1-1, 0)]

while queue:
    x, y, dist = queue.pop(0)
    if (x, y) == (x2-1, y2-1):
        print(dist)
        break
    for dx, dy in [(1, 0), (-1, 0), (0, 1), (0, -1)]:
        nx, ny = x + dx, y + dy
        if 0 <= nx < m and 0 <= ny < n and matrix[ny][nx] == 0:
            queue.append((nx, ny, dist + 1))
            matrix[ny][nx] = 1
else:
    print(-1)
